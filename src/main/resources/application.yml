# Configuración de pasarelas de pago
stripe:
    api:
        secret-key: ${STRIPE_SECRET_KEY:sk_test_your_stripe_secret_key}
        publishable-key: ${STRIPE_PUBLISHABLE_KEY:pk_test_your_stripe_publishable_key}

paypal:
    client:
        id: ${PAYPAL_CLIENT_ID:your_paypal_client_id}
        secret: ${PAYPAL_CLIENT_SECRET:your_paypal_client_secret}
    environment: ${PAYPAL_ENVIRONMENT:sandbox}

# Configuración principal
spring:
    profiles:
        active: dev
    
    # Configuración de datasource (común para todos los perfiles)
    datasource:
        url: jdbc:postgresql://localhost:5432/payment_gateway
        username: ${DB_USERNAME:payment_user}
        password: ${DB_PASSWORD:payment_password}
        driver-class-name: org.postgresql.Driver
        hikari:
            connection-timeout: 20000
            maximum-pool-size: 10
            minimum-idle: 5

    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                format_sql: true
                jdbc:
                    lob:
                        non_contextual_creation: true

    # Configuración de Redis
    data:
        redis:
            host: ${REDIS_HOST:localhost}
            port: ${REDIS_PORT:6379}
            password: ${REDIS_PASSWORD:}
            timeout: 2000ms
            lettuce:
                pool:
                    max-active: 8
                    max-idle: 8
                    min-idle: 0

    # Flyway deshabilitado para desarrollo
    flyway:
        enabled: false

# Configuración de logging
logging:
    level:
        com.paymentgateway: DEBUG
        org.springframework.security: DEBUG
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file:
        name: logs/payment-gateway.log

# Configuración de management
management:
    endpoints:
        web:
            exposure:
                include: health,info,metrics,prometheus
    endpoint:
        health:
            show-details: always
    prometheus:
        metrics:
            export:
                enabled: true

# Configuración de Swagger
springdoc:
    api-docs:
        path: /api-docs
    swagger-ui:
        path: /swagger-ui.html
        enabled: true
    show-actuator: true

---
# Perfil de desarrollo
spring:
    config:
        activate:
            on-profile: dev

---
# Perfil de producción
spring:
    config:
        activate:
            on-profile: prod
    
    datasource:
        hikari:
            maximum-pool-size: 20
            minimum-idle: 10

    jpa:
        hibernate:
            ddl-auto: validate
        show-sql: false

    flyway:
        enabled: true
        locations: classpath:db/migration
        baseline-on-migrate: true

    logging:
        level:
            com.paymentgateway: INFO
            root: WARN
